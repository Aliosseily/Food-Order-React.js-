{"ast":null,"code":"var _jsxFileName = \"C:\\\\React.js\\\\food-order\\\\src\\\\components\\\\Cart\\\\Checkout.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport styles from \"./Checkout.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === \"\";\n\nconst isFiveChar = value => value.trim().length === 5;\n\nconst Checkout = props => {\n  _s();\n\n  const [formInputsValidity, setFormInputsValidity] = useState({\n    name: true,\n    street: true,\n    postalCode: true,\n    city: true\n  });\n  const nameInput = useRef();\n  const streetInput = useRef();\n  const postalCodeInput = useRef();\n  const cityInput = useRef();\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInput.current.value;\n    const enteredStreet = streetInput.current.value;\n    const enteredPostalCode = postalCodeInput.current.value;\n    const enteredCity = cityInput.current.value; // Simple form validation\n\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredPostalCodeIsValid = isFiveChar(enteredPostalCode);\n    const enteredcityIsValid = !isEmpty(enteredCity);\n    setFormInputsValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      postalCode: enteredPostalCodeIsValid,\n      city: enteredcityIsValid\n    });\n    const formIsValid = enteredNameIsValid && enteredStreetIsValid && enteredPostalCodeIsValid && enteredcityIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n\n    props.onConfirm({\n      name: enteredName,\n      street: enteredStreet,\n      postalCode: enteredPostalCode,\n      city: enteredCity\n    });\n    console.log(\"Send\");\n  };\n\n  const nameControlClasses = `${styles.control} ${formInputsValidity.name ? \"\" : styles.invalid}`;\n  const streetControlClasses = `${styles.control} ${formInputsValidity.street ? \"\" : styles.invalid}`;\n  const postalCodeControlClasses = `${styles.control} ${formInputsValidity.postalCode ? \"\" : styles.invalid}`;\n  const cityControlClasses = `${styles.control} ${formInputsValidity.city ? \"\" : styles.invalid}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInput,\n        type: \"text\",\n        id: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), !formInputsValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: streetControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: streetInput,\n        type: \"text\",\n        id: \"street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), !formInputsValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid stret!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: postalCodeControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: postalCodeInput,\n        type: \"text\",\n        id: \"postal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), !formInputsValidity.postalCode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid postal code ( 5 character long )\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 44\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cityControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: cityInput,\n        type: \"text\",\n        id: \"city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), !formInputsValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid city!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: styles.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"DDjO6z+rPPjS2xB2pC2ptUsuiXE=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["C:/React.js/food-order/src/components/Cart/Checkout.js"],"names":["useRef","useState","styles","isEmpty","value","trim","isFiveChar","length","Checkout","props","formInputsValidity","setFormInputsValidity","name","street","postalCode","city","nameInput","streetInput","postalCodeInput","cityInput","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostalCode","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredPostalCodeIsValid","enteredcityIsValid","formIsValid","onConfirm","console","log","nameControlClasses","control","invalid","streetControlClasses","postalCodeControlClasses","cityControlClasses","form","actions","onCancel","submit"],"mappings":"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","sourcesContent":["import { useRef, useState } from \"react\";\r\nimport styles from \"./Checkout.module.css\";\r\n\r\nconst isEmpty = (value) => value.trim() === \"\";\r\nconst isFiveChar = (value) => value.trim().length === 5;\r\n\r\nconst Checkout = (props) => {\r\n  const [formInputsValidity, setFormInputsValidity] =useState({\r\n    name: true,\r\n    street: true,\r\n    postalCode: true,\r\n    city: true,\r\n  });\r\n\r\n  const nameInput = useRef();\r\n  const streetInput = useRef();\r\n  const postalCodeInput = useRef();\r\n  const cityInput = useRef();\r\n  const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n    const enteredName = nameInput.current.value;\r\n    const enteredStreet = streetInput.current.value;\r\n    const enteredPostalCode = postalCodeInput.current.value;\r\n    const enteredCity = cityInput.current.value;\r\n    // Simple form validation\r\n    const enteredNameIsValid = !isEmpty(enteredName);\r\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\r\n    const enteredPostalCodeIsValid = isFiveChar(enteredPostalCode);\r\n    const enteredcityIsValid = !isEmpty(enteredCity);\r\n\r\n    setFormInputsValidity({\r\n      name: enteredNameIsValid,\r\n      street: enteredStreetIsValid,\r\n      postalCode: enteredPostalCodeIsValid,\r\n      city: enteredcityIsValid,\r\n    });\r\n\r\n    const formIsValid =\r\n      enteredNameIsValid &&\r\n      enteredStreetIsValid &&\r\n      enteredPostalCodeIsValid &&\r\n      enteredcityIsValid;\r\n    if (!formIsValid) {\r\n      return;\r\n    }\r\n    props.onConfirm({\r\n        name:enteredName,\r\n        street:enteredStreet,\r\n        postalCode:enteredPostalCode,\r\n        city:enteredCity,\r\n    })\r\n    console.log(\"Send\")\r\n  };\r\nconst nameControlClasses = `${styles.control} ${formInputsValidity.name ? \"\" : styles.invalid}`;\r\nconst streetControlClasses = `${styles.control} ${formInputsValidity.street ? \"\" : styles.invalid}`;\r\nconst postalCodeControlClasses = `${styles.control} ${formInputsValidity.postalCode ? \"\" : styles.invalid}`;\r\nconst cityControlClasses = `${styles.control} ${formInputsValidity.city ? \"\" : styles.invalid}`;\r\n  return (\r\n    <form className={styles.form} onSubmit={confirmHandler}>\r\n      <div className={nameControlClasses}>\r\n        <label htmlFor=\"name\">Your Name</label>\r\n        <input ref={nameInput} type=\"text\" id=\"name\" />\r\n        {!formInputsValidity.name && <p>Please enter a valid name!</p>}\r\n      </div>\r\n      <div className={streetControlClasses}>\r\n        <label htmlFor=\"street\">Street</label>\r\n        <input ref={streetInput} type=\"text\" id=\"street\" />\r\n        {!formInputsValidity.street && <p>Please enter a valid stret!</p>}\r\n\r\n      </div>\r\n      <div className={postalCodeControlClasses}>\r\n        <label htmlFor=\"postal\">Postal Code</label>\r\n        <input ref={postalCodeInput} type=\"text\" id=\"postal\" />\r\n        {!formInputsValidity.postalCode && <p>Please enter a valid postal code ( 5 character long )</p>}\r\n\r\n      </div>\r\n      <div className={cityControlClasses}>\r\n        <label htmlFor=\"city\">City</label>\r\n        <input ref={cityInput} type=\"text\" id=\"city\" />\r\n        {!formInputsValidity.city && <p>Please enter a valid city!</p>}\r\n\r\n      </div>\r\n      <div className={styles.actions}>\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\" className={styles.submit}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n"]},"metadata":{},"sourceType":"module"}