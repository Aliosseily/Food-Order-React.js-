{"ast":null,"code":"var _jsxFileName = \"C:\\\\React.js\\\\food-order\\\\src\\\\components\\\\Layout\\\\HeaderCartButton.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport styles from \"./HeaderCartButton.module.css\";\nimport CartIcon from \"../Cart/CartIcon\";\nimport CartContext from \"../../store/cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HeaderCartButton = props => {\n  _s();\n\n  const [isChanged, setIsChanged] = useState(false);\n  const cartCtx = useContext(CartContext);\n  const {\n    totalAmount\n  } = cartCtx;\n  const btnClasses = `${styles.button} ${styles.bump}`;\n  useEffect(() => {\n    console.log(\"isChanged\", isChanged);\n    setIsChanged(true);\n    console.log(\"totalAmount\", totalAmount);\n  }, [totalAmount, isChanged]); // get the number of items in cart (1 meal may have 3 amount)\n\n  const numberOfCartItem = cartCtx.items.reduce((curNumber, item) => {\n    return curNumber + item.amount;\n  }, 0);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: btnClasses,\n    onClick: props.onClick,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: styles.icon,\n      children: /*#__PURE__*/_jsxDEV(CartIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Your Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: styles.badge,\n      children: numberOfCartItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HeaderCartButton, \"uYchmxVKR+g9Z64MdSQbYu/TGcY=\");\n\n_c = HeaderCartButton;\nexport default HeaderCartButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeaderCartButton\");","map":{"version":3,"sources":["C:/React.js/food-order/src/components/Layout/HeaderCartButton.js"],"names":["React","useContext","useEffect","useState","styles","CartIcon","CartContext","HeaderCartButton","props","isChanged","setIsChanged","cartCtx","totalAmount","btnClasses","button","bump","console","log","numberOfCartItem","items","reduce","curNumber","item","amount","onClick","icon","badge"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;;;AACA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAAA;;AAClC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAMQ,OAAO,GAAGV,UAAU,CAACK,WAAD,CAA1B;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAkBD,OAAxB;AAEA,QAAME,UAAU,GAAI,GAAET,MAAM,CAACU,MAAO,IAAGV,MAAM,CAACW,IAAK,EAAnD;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBR,SAAxB;AACAC,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEAM,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BL,WAA3B;AACD,GALQ,EAKN,CAACA,WAAD,EAAaH,SAAb,CALM,CAAT,CAPkC,CAclC;;AACA,QAAMS,gBAAgB,GAAGP,OAAO,CAACQ,KAAR,CAAcC,MAAd,CAAqB,CAACC,SAAD,EAAYC,IAAZ,KAAqB;AACjE,WAAOD,SAAS,GAAGC,IAAI,CAACC,MAAxB;AACD,GAFwB,EAEtB,CAFsB,CAAzB;AAIA,sBACE;AAAQ,IAAA,SAAS,EAAEV,UAAnB;AAA+B,IAAA,OAAO,EAAEL,KAAK,CAACgB,OAA9C;AAAA,4BACE;AAAM,MAAA,SAAS,EAAEpB,MAAM,CAACqB,IAAxB;AAAA,6BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAM,MAAA,SAAS,EAAErB,MAAM,CAACsB,KAAxB;AAAA,gBAAgCR;AAAhC;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA5BD;;GAAMX,gB;;KAAAA,gB;AA8BN,eAAeA,gBAAf","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport styles from \"./HeaderCartButton.module.css\";\r\nimport CartIcon from \"../Cart/CartIcon\";\r\nimport CartContext from \"../../store/cart-context\";\r\nconst HeaderCartButton = (props) => {\r\n  const [isChanged, setIsChanged] = useState(false);\r\n  const cartCtx = useContext(CartContext);\r\n  const { totalAmount } = cartCtx;\r\n\r\n  const btnClasses = `${styles.button} ${styles.bump}`;\r\n\r\n  useEffect(() => {\r\n    console.log(\"isChanged\",isChanged)\r\n    setIsChanged(true);\r\n\r\n    console.log(\"totalAmount\", totalAmount);\r\n  }, [totalAmount,isChanged]);\r\n\r\n  // get the number of items in cart (1 meal may have 3 amount)\r\n  const numberOfCartItem = cartCtx.items.reduce((curNumber, item) => {\r\n    return curNumber + item.amount;\r\n  }, 0);\r\n\r\n  return (\r\n    <button className={btnClasses} onClick={props.onClick}>\r\n      <span className={styles.icon}>\r\n        <CartIcon />\r\n      </span>\r\n      <span>Your Cart</span>\r\n      <span className={styles.badge}>{numberOfCartItem}</span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default HeaderCartButton;\r\n"]},"metadata":{},"sourceType":"module"}