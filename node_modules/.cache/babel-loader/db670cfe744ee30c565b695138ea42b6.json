{"ast":null,"code":"var _jsxFileName = \"C:\\\\React.js\\\\food-order\\\\src\\\\components\\\\Cart\\\\Cart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport Modal from \"../UI/Modal\";\nimport styles from \"./Cart.module.css\";\nimport CartContext from \"../../store/cart-context\";\nimport CartItem from \"./CartItem\";\nimport Checkout from \"./Checkout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const [isCheckout, setIsCheckout] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [didSubmit, setDidSubmit] = useState(false);\n  const [error, setError] = useState();\n  const cartCtx = useContext(CartContext);\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemAddHandler = item => {\n    const obj = { ...item,\n      amount: 1\n    };\n    cartCtx.addItem(obj);\n  };\n\n  const cartItemRemoveHandler = id => {\n    cartCtx.removeItem(id);\n  };\n\n  const orderHandler = () => {\n    setIsCheckout(true);\n  };\n\n  const submitOrderHandler = async userData => {\n    setIsSubmitting(true);\n    setError();\n\n    try {\n      const response = await fetch(\"https://react-http-9a2e3-default-rtdb.asia-southeast1.firebasedatabase.app/orders.json\", {\n        method: \"POST\",\n        // when I add headers error message below was not returned\n        // headers:{\n        //   'Content-Type':'application/json'\n        // },\n        body: JSON.stringify({\n          user: userData,\n          orderedItems: cartCtx.items\n        })\n      });\n      console.log(\"response\", response);\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong while trying to order\");\n      }\n    } catch (error) {\n      setDidSubmit(false);\n      setError(error.message || \"Something went wrong!\");\n    }\n\n    setIsSubmitting(false);\n    setDidSubmit(true);\n    cartCtx.clearCartItems();\n  };\n\n  const cancelFormHandler = () => {\n    setIsCheckout(false);\n  };\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: styles[\"cart-items\"],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      price: item.price,\n      name: item.name,\n      amount: item.amount,\n      onAdd: cartItemAddHandler.bind(null, item),\n      onRemove: cartItemRemoveHandler.bind(null, item.id)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n\n  const modalActions = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.actions,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles[\"button--alt\"],\n      onClick: props.onHideCart,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: orderHandler,\n      className: styles.button,\n      children: \"Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n\n  const cartModalcontent = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.error,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }, this), isCheckout && /*#__PURE__*/_jsxDEV(Checkout, {\n      onCancel: cancelFormHandler,\n      onConfirm: submitOrderHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this), !isCheckout && modalActions]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n\n  const isSubmittingModalcontent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Sending order data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 36\n  }, this);\n\n  const didSubmitModalcontent = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Successfully sent the order.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.actions,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles[\"button--alt\"],\n        onClick: props.onHideCart,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onCloseCart: props.onHideCart,\n    children: [(error || !isSubmitting && !didSubmit) && cartModalcontent, isSubmitting && isSubmittingModalcontent, !isSubmitting && didSubmit && !error && didSubmitModalcontent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"LPWfYuzH20LJA5NVnAubkiE/5k8=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["C:/React.js/food-order/src/components/Cart/Cart.js"],"names":["React","useContext","useState","Modal","styles","CartContext","CartItem","Checkout","Cart","props","isCheckout","setIsCheckout","isSubmitting","setIsSubmitting","didSubmit","setDidSubmit","error","setError","cartCtx","totalAmount","toFixed","hasItems","items","length","cartItemAddHandler","item","obj","amount","addItem","cartItemRemoveHandler","id","removeItem","orderHandler","submitOrderHandler","userData","response","fetch","method","body","JSON","stringify","user","orderedItems","console","log","ok","Error","message","clearCartItems","cancelFormHandler","cartItems","map","price","name","bind","modalActions","actions","onHideCart","button","cartModalcontent","total","isSubmittingModalcontent","didSubmitModalcontent"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport Modal from \"../UI/Modal\";\r\nimport styles from \"./Cart.module.css\";\r\nimport CartContext from \"../../store/cart-context\";\r\nimport CartItem from \"./CartItem\";\r\nimport Checkout from \"./Checkout\";\r\nconst Cart = (props) => {\r\n  const [isCheckout, setIsCheckout] = useState(false);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [didSubmit, setDidSubmit] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const cartCtx = useContext(CartContext);\r\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\r\n  const hasItems = cartCtx.items.length > 0;\r\n  const cartItemAddHandler = (item) => {\r\n    const obj = {\r\n      ...item,\r\n      amount: 1,\r\n    };\r\n    cartCtx.addItem(obj);\r\n  };\r\n\r\n  const cartItemRemoveHandler = (id) => {\r\n    cartCtx.removeItem(id);\r\n  };\r\n\r\n  const orderHandler = () => {\r\n    setIsCheckout(true);\r\n  };\r\n\r\n  const submitOrderHandler = async (userData) => {\r\n    setIsSubmitting(true);\r\n   setError();\r\n    try {\r\n      const response = await fetch(\r\n        \"https://react-http-9a2e3-default-rtdb.asia-southeast1.firebasedatabase.app/orders.json\",\r\n        {\r\n          method: \"POST\",\r\n          // when I add headers error message below was not returned\r\n          // headers:{\r\n          //   'Content-Type':'application/json'\r\n          // },\r\n          body: JSON.stringify({\r\n            user: userData,\r\n            orderedItems: cartCtx.items,\r\n          }),\r\n        }\r\n      );\r\n      console.log(\"response\", response);\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong while trying to order\");\r\n      }\r\n    } catch (error) {\r\n      setDidSubmit(false);\r\n      setError(error.message || \"Something went wrong!\");\r\n    }\r\n    setIsSubmitting(false);\r\n    setDidSubmit(true);\r\n    cartCtx.clearCartItems()\r\n  };\r\n\r\n  const cancelFormHandler = () => {\r\n    setIsCheckout(false);\r\n  };\r\n\r\n  const cartItems = (\r\n    <ul className={styles[\"cart-items\"]}>\r\n      {cartCtx.items.map((item) => (\r\n        <CartItem\r\n          key={item.id}\r\n          price={item.price}\r\n          name={item.name}\r\n          amount={item.amount}\r\n          onAdd={cartItemAddHandler.bind(null, item)}\r\n          onRemove={cartItemRemoveHandler.bind(null, item.id)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\n  const modalActions = (\r\n    <div className={styles.actions}>\r\n      <button className={styles[\"button--alt\"]} onClick={props.onHideCart}>\r\n        Close\r\n      </button>\r\n      {hasItems && (\r\n        <button onClick={orderHandler} className={styles.button}>\r\n          Order\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const cartModalcontent = (\r\n    <React.Fragment>\r\n      {cartItems}\r\n      <div className={styles.total}>\r\n        <span>Total Amount</span>\r\n        <span>{totalAmount}</span>\r\n      </div>\r\n      {error && <p className={styles.error}>{error}</p>}\r\n      {isCheckout && (\r\n        <Checkout onCancel={cancelFormHandler} onConfirm={submitOrderHandler} />\r\n      )}\r\n      {!isCheckout && modalActions}\r\n    </React.Fragment>\r\n  );\r\n\r\n  const isSubmittingModalcontent = <p>Sending order data...</p>;\r\n  const didSubmitModalcontent = (\r\n    <React.Fragment>\r\n      <p>Successfully sent the order.</p>\r\n      <div className={styles.actions}>\r\n        <button className={styles[\"button--alt\"]} onClick={props.onHideCart}>\r\n          Close\r\n        </button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n  return (\r\n    <Modal onCloseCart={props.onHideCart}>\r\n      { (error || (!isSubmitting && !didSubmit)) && cartModalcontent}\r\n      {isSubmitting && isSubmittingModalcontent}\r\n      {!isSubmitting && didSubmit && !error && didSubmitModalcontent}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n"]},"metadata":{},"sourceType":"module"}